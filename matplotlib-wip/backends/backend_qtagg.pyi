import datetime
import numpy as np
from typing import Any, Callable, Iterable, Literal, Sequence
from matplotlib._typing import *
from matplotlib.figure import Figure
from matplotlib.backend_bases import Event
from matplotlib.backend_bases import _Backend

"""
This type stub file was generated by pyright.
"""

from .backend_agg import FigureCanvasAgg
from .backend_qt import FigureCanvasQT, _BackendQT

"""
Render to qt from agg.
"""

class FigureCanvasQTAgg(FigureCanvasAgg, FigureCanvasQT):
    def __init__(self, figure=...) -> None: ...
    def paintEvent(self, event):
        """
        Copy the image from the Agg canvas to the qt.drawable.

        In Qt, all drawing should be done inside of here when a widget is
        shown onscreen.
        """
        ...
    def print_figure(self, *args, **kwargs): ...

class _BackendQTAgg(_BackendQT):
    FigureCanvas = FigureCanvasQTAgg
