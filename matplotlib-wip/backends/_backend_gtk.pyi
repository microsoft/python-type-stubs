from matplotlib._typing import *
from matplotlib.backend_tools import Cursors
from matplotlib import backend_tools
from matplotlib.backend_bases import (
    FigureCanvasBase,
    FigureManagerBase,
    NavigationToolbar2,
    TimerBase,
    _Backend,
)

backend_version = ...

def mpl_to_gtk_cursor_name(mpl_cursor: Cursors) -> str: ...

class TimerGTK(TimerBase):
    def __init__(self, *args, **kwargs) -> None: ...

class _FigureManagerGTK(FigureManagerBase):

    canvas: FigureCanvasBase
    num: int | str
    toolbar: Gtk.Toolbar | Gtk.Box
    vbox: Gtk.VBox
    window: Gtk.Window

    def __init__(self, canvas: FigureCanvasBase, num: int | str) -> None: ...
    def destroy(self, *args): ...
    def show(self): ...
    def full_screen_toggle(self): ...
    def get_window_title(self): ...
    def set_window_title(self, title): ...
    def resize(self, width, height): ...

class _NavigationToolbar2GTK(NavigationToolbar2):
    def set_message(self, s): ...
    def draw_rubberband(self, event, x0, y0, x1, y1): ...
    def remove_rubberband(self): ...
    def pan(self, *args): ...
    def zoom(self, *args): ...
    def set_history_buttons(self): ...

class RubberbandGTK(backend_tools.RubberbandBase):
    def draw_rubberband(self, x0, y0, x1, y1): ...
    def remove_rubberband(self): ...

class ConfigureSubplotsGTK(backend_tools.ConfigureSubplotsBase):
    def trigger(self, *args): ...

class _BackendGTK(_Backend):
    @staticmethod
    def mainloop() -> None: ...
