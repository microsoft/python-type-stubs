# pyright: strict

from typing import List, Optional, Tuple

from PIL.Image import Image


class LutBuilder:
    def __init__(self, patterns: Optional[List[str]] = ..., op_name: Optional[str] = ...) -> None: ...

    def add_patterns(self, patterns: List[str]) -> None: ...

    def build_default_lut(self) -> None: ...

    def build_lut(self) -> bytearray: ...

    def get_lut(self) -> bytearray: ...


class MorphOp:
    def __init__(self, lut: Optional[bytearray], op_name: Optional[str] = ..., patterns: Optional[List[str]] = ...) -> None: ...

    def apply(self, image: Image) -> Tuple[int, Image]: ...

    def get_on_pixels(self, image: Image) -> List[Tuple[int, int]]: ...

    def load_lut(self, filename: str) -> None: ...

    def match(self, image: Image) -> List[Tuple[int, int]]: ...

    def save_lut(self, filename: str) -> None: ...

    def set_lut(self, lut: bytearray) -> None: ...
