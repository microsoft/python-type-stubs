# pyright: strict

from PIL.Image import Image
from typing import Any, IO, Optional, Tuple

class Parser:
    def close(self) -> Image: ...
    def feed(self, data: bytes) -> None: ...
    def reset(self) -> None: ...

class PyDecoder:
    def cleanup(self) -> None: ...
    def decode(self, buffer: bytes) -> Tuple[int, int]: ...
    def init(self, *args: Any) -> None: ...
    def set_as_raw(self, data: bytes, rawmode: Optional[str] = ...) -> None: ...
    def setfd(self, fd: IO[Any]) -> None: ...
    # TODO: core image object
    def setimage(self, im: Any, extents: Optional[Tuple[int, int, int, int]]) -> None: ...


# INCOMPLETE
def __getattr__(name: str) -> Any: ...

