from typing import Any, Optional

from faker.utils.decorators import lowercase as lowercase
from faker.utils.decorators import slugify as slugify
from faker.utils.decorators import slugify_unicode as slugify_unicode
from faker.utils.distribution import choices_distribution as choices_distribution

from .. import BaseProvider as BaseProvider

localized: bool

class _IPv4Constants: ...

class Provider(BaseProvider):
    safe_email_tlds: Any = ...
    free_email_domains: Any = ...
    tlds: Any = ...
    hostname_prefixes: Any = ...
    uri_pages: Any = ...
    uri_paths: Any = ...
    uri_extensions: Any = ...
    http_methods: Any = ...
    user_name_formats: Any = ...
    email_formats: Any = ...
    url_formats: Any = ...
    uri_formats: Any = ...
    image_placeholder_services: Any = ...
    replacements: Any = ...
    def email(self, domain: Optional[Any] = ...): ...
    def safe_email(self): ...
    def free_email(self): ...
    def company_email(self): ...
    def free_email_domain(self): ...
    def ascii_email(self): ...
    def ascii_safe_email(self): ...
    def ascii_free_email(self): ...
    def ascii_company_email(self): ...
    def user_name(self): ...
    def hostname(self, levels: int = ...): ...
    def domain_name(self, levels: int = ...): ...
    def domain_word(self): ...
    def dga(
        self,
        year: Optional[Any] = ...,
        month: Optional[Any] = ...,
        day: Optional[Any] = ...,
        tld: Optional[Any] = ...,
        length: Optional[Any] = ...,
    ): ...
    def tld(self): ...
    def http_method(self): ...
    def url(self, schemes: Optional[Any] = ...): ...
    def ipv4_network_class(self): ...
    def ipv4(
        self,
        network: bool = ...,
        address_class: Optional[Any] = ...,
        private: Optional[Any] = ...,
    ): ...
    def ipv4_private(self, network: bool = ..., address_class: Optional[Any] = ...): ...
    def ipv4_public(self, network: bool = ..., address_class: Optional[Any] = ...): ...
    def ipv6(self, network: bool = ...): ...
    def mac_address(self): ...
    def port_number(
        self, is_system: bool = ..., is_user: bool = ..., is_dynamic: bool = ...
    ): ...
    def uri_page(self): ...
    def uri_path(self, deep: Optional[Any] = ...): ...
    def uri_extension(self): ...
    def uri(self): ...
    def slug(self, value: Optional[Any] = ...): ...
    def image_url(self, width: Optional[Any] = ..., height: Optional[Any] = ...): ...
