from typing import Any, Optional

from ..en import Provider as AddressProvider

class Provider(AddressProvider):
    city_prefixes: Any = ...
    city_suffixes: Any = ...
    building_number_formats: Any = ...
    street_suffixes: Any = ...
    postcode_formats: Any = ...
    states: Any = ...
    states_abbr: Any = ...
    states_postcode: Any = ...
    territories_abbr: Any = ...
    states_and_territories_abbr: Any = ...
    military_state_abbr: Any = ...
    military_ship_prefix: Any = ...
    military_apo_format: str = ...
    military_dpo_format: str = ...
    city_formats: Any = ...
    street_name_formats: Any = ...
    street_address_formats: Any = ...
    address_formats: Any = ...
    secondary_address_formats: Any = ...
    def city_prefix(self): ...
    def secondary_address(self): ...
    def state(self): ...
    def state_abbr(self, include_territories: bool = ...): ...
    def postcode(self): ...
    def zipcode_plus4(self): ...
    def postcode_in_state(self, state_abbr: Optional[Any] = ...): ...
    def military_ship(self): ...
    def military_state(self): ...
    def military_apo(self): ...
    def military_dpo(self): ...
    def zipcode(self): ...
    def zipcode_in_state(self, state_abbr: Optional[Any] = ...): ...
    def postalcode(self): ...
    def postalcode_in_state(self, state_abbr: Optional[Any] = ...): ...
    def postalcode_plus4(self): ...
