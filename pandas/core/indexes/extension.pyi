from pandas.core.indexes.base import Index as Index
from typing import List

def inherit_from_data(name: str, delegate, cache: bool=..., wrap: bool=...) : ...
def inherit_names(names: List[str], delegate, cache: bool=..., wrap: bool=...) : ...
def make_wrapped_arith_op(opname): ...

class ExtensionIndex(Index):
    __eq__ = ...
    __ne__ = ...
    __lt__ = ...
    __gt__ = ...
    __le__ = ...
    __ge__ = ...
    def __getitem__(self, key): ...
    def __iter__(self) : ...
    def dropna(self, how: str = ...): ...
    def repeat(self, repeats, axis = ...): ...
    def take(self, indices, axis: int = ..., allow_fill: bool = ..., fill_value = ..., **kwargs): ...
    def unique(self, level = ...): ...
    def map(self, mapper, na_action = ...): ...
    def astype(self, dtype, copy: bool = ...): ...
