from __future__ import annotations
import sys
from typing import Any, Union
from pandas._typing import OrderableScalar

if sys.version_info >= (3, 8):
    from typing import Literal
else:
    from typing_extensions import Literal
import datetime

class IntervalMixin:
    @property
    def closed_left(self) -> bool: ...
    @property
    def closed_right(self) -> bool: ...
    @property
    def open_left(self) -> bool: ...
    @property
    def open_right(self) -> bool: ...
    @property
    def mid(self) -> float: ...
    @property
    def length(self) -> float: ...
    @property
    def is_empty(self) -> bool: ...

class Interval(IntervalMixin):
    @property
    def left(self) -> OrderableScalar: ...
    @property
    def right(self) -> OrderableScalar: ...
    @property
    def closed(self) -> str: ...
    def __init__(
        self,
        left: OrderableScalar,
        right: OrderableScalar,
        closed: Union[str, Literal["left", "right", "both", "neither"]] = ...,
    ) -> None: ...
    def __hash__(self) -> int: ...
    def __contains__(self, key: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...
    def __add__(self, y: float) -> Interval: ...
    def __sub__(self, y: float) -> Interval: ...
    def __mul__(self, y: float) -> Interval: ...
    def __truediv__(self, y: float) -> Interval: ...
    def __floordiv__(self, y: float) -> Interval: ...
    def overlaps(self, other: Interval) -> bool: ...
