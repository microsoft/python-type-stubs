from matplotlib.axes import Axes as PlotAxes
from pandas.core.base import PandasObject as PandasObject
from pandas.core.frame import DataFrame
from typing import Optional, Sequence, Tuple, Union

def hist_series(self, by = ..., ax = ..., grid: bool = ..., xlabelsize = ..., xrot = ..., ylabelsize = ..., yrot = ..., figsize = ..., bins: int = ..., backend = ..., **kwargs): ...
def hist_frame(data, column = ..., by = ..., grid: bool = ..., xlabelsize = ..., xrot = ..., ylabelsize = ..., yrot = ..., ax = ..., sharex: bool = ..., sharey: bool = ..., figsize = ..., layout = ..., bins: int = ..., backend = ..., **kwargs): ...
def boxplot(
    data: DataFrame,
    column: Optional[Union[str, Sequence[str]]] = ...,
    by: Optional[Union[str, Sequence[str]]] = ...,
    ax: Optional[PlotAxes] = ...,
    fontsize: Optional[Union[float, str]] = ...,
    rot: float = ...,
    grid: bool = ...,
    figsize: Optional[Tuple[float, float]] = ...,
    layout: Optional[Tuple[int, int]] = ...,
    return_type: Optional[str] = ...,
) : ...
def boxplot_frame(self, column = ..., by = ..., ax = ..., fontsize = ..., rot: int = ..., grid: bool = ..., figsize = ..., layout = ..., return_type = ..., backend = ..., **kwargs): ...
def boxplot_frame_groupby(grouped, subplots: bool = ..., column = ..., fontsize = ..., rot: int = ..., grid: bool = ..., ax = ..., figsize = ..., layout = ..., sharex: bool = ..., sharey: bool = ..., backend = ..., **kwargs): ...

class PlotAccessor(PandasObject):
    def __init__(self, data) -> None: ...
    def __call__(self, *args, **kwargs): ...
    def line(self, x = ..., y = ..., **kwargs): ...
    def bar(self, x = ..., y = ..., **kwargs): ...
    def barh(self, x = ..., y = ..., **kwargs): ...
    def box(self, by = ..., **kwargs): ...
    def hist(self, by = ..., bins: int = ..., **kwargs): ...
    def kde(self, bw_method = ..., ind = ..., **kwargs): ...
    density = ...
    def area(self, x = ..., y = ..., **kwargs): ...
    def pie(self, **kwargs): ...
    def scatter(self, x, y, s = ..., c = ..., **kwargs): ...
    def hexbin(self, x, y, C = ..., reduce_C_function = ..., gridsize = ..., **kwargs): ...
