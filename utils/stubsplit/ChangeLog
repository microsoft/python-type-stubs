CHANGES
=======

* pandas: handle setitem with Timedelta (#120)
* fix NamedAgg aggfunc should be AggScalar (#128)
* pandas: fix Series.between() (#121)
* read\_csv on\_bad\_lines and storage\_options arguments (#119)
* allow \`args\` and \`kwargs\` for pandas DataFrame.apply (#104)
* pandas: add dropna argument to DataFrameGroupBy (#126)
* pandas: fix Timedeltas constructor (#123)
* pandas: add kwargs to to\_feather (#124)
* pandas: fix series and using getitem (#122)
* fix for missing types on NamedAgg (#111)
* fix overloads for read\_csv and read\_table (#109)
* add typing for pandas.isnull(), pandas.isna() (#106)
* fix arguments to pandas.Series.where() (#108)
* for pandas.loc\_\_setitem\_\_, use Sequence and allow boolean series (#107)
* fix return types for pandas str accessors (#105)
* pandas allow tuples to mix types in index in .loc and be of any length (#103)
* fix pandas .loc with slice arguments (#98)
* Allow Series as argument to pandas.to\_datetime (#102)
* pandas Series.to\_dict() can return any key in Dict (#99)
* Resync pandas stubs from pylance (#101)
* allow Series.index to be set (#97)
* pandas: allow tuples to get scalar values in .loc (#96)
* Rename \_BaseExcelReader to BaseExcelReader
* pandas: allow list of strings to index DataFrame (#94)
* pandas: allow loc set with scalar arguments (#93)
* allow boolean series as columns chooser in getitem (#92)
* fix Series.mask argument (#89)
* pandas: fix .loc setitem with a scalar (#90)
* matplotlib Patch.\_\_init\_\_ accepts any arguments (#91)
* Fix annotation for the \`parse\_dates\` argument of the \`pandas.read\_html\` function (#85)
* initial opencv scraped stub (#72)
* adding partial stubs for huggingface transformers due to poor perform… (#86)
* allow Index in setitem on DataFrame (#84)
* pandas: allow scalars as args to series.fillna (#83)
* pandas: fix various arguments for Series.iloc and DataFrame.loc (#82)
* fix return type of Series groupby aggregate (#81)
* pandas:  allow str as second item in setitem for loc on DF, allow Index in setitem for loc on Series (#79)
* Update typing for ascending param for DataFrame.sort\_values and DataF… (#80)
* Add type for pandas.\_\_version\_\_ (#78)
* Remove upstreamed stubs (#77)
* Allow a scalar argument for data in Series (#76)
* fix axis arguments for concat (#68)
* loc on DataFrame should accept str (#74)
* Fix a syntax error in the matplotlib stubs (#75)
* Added initial partial sympy-stubs
* loc on just index returns DataFrame (#71)
* setter for index.names (#70)
* add gym-stubs used in pylance to stub repo
* pandas:  fix series name argument (#66)
* fix series.astype dtype argument for pandas (#64)
* fix loc to accept Index as arg (#63)
* fix arguments for merge (#61)
* fix drop columns argument (#59)
* fix getitem issue (#56)
* added pywin32 compiled module's stubs for longer name import usage cases (#57)
* Pandas fixes. (#54)
* Update PIL stubs (#53)
* Add matplotlib and PIL stubs from Pylance (#51)
* Pandas (#49)
* push stubs in pylance to python-type-stubs repo
* Fix mapper-based calling convention of DataFrame rename (#41)
* Fix issues with rename\_axis overloads and arguments (microsoft/pylance-release#634), concat return type (microsoft/pylance-release#624), path-like arguments (microsoft/pylance-release#602) and DataFrame.astype (microsoft/python-type-stubs#32)
* Fix pygame AbstractGroup attribute typehints (#34)
* Incorporated changes from Pylance
* Create README.md
* Create README.md
* Changed from copying original package licenses to READMEs that reference original package locations
* Added Microsoft headers as we can't put the (c) line in the license file for PyGame
* Add license and 3rd party notice file
* Add stubsplit utility. Update pandas stubs
* Update README.md
* Create CONTRIBUTING.md
* Update README.md
* Reorg
* Partial
* Partial
* Update README.md
* Updated README
* Partial
* Partial
* Partial
* Fixups after code review by Pygame folks
* Ran black and isort on pygame and fixed a few other errors caught by pyright
* Removed stub files that have been submitted to typeshed and replaced with README.md files
* Take 2
* PR Feedback changes
* removed an Any
* Remove compat.pyi amd small fixes
* PR feedback changes
* added two more stubs
* First commit of modified stubs. More celanup needed for typshed
* black formatting messes up every alternate  save
* Clearn up commas, initializers
* Fixed \_\_init\_\_.py and dangling commas
* Completed Rect.pyi
* Initial pass creating overloads & ensuring types
* initial commit of pygame stubs
* fixed \_\_init\_\_.py to export the classes
* Fixed a couple of issues in deprecated stubs
* Partial
* Fixed a couple of bugs caught by stubtest
* Small clean-up in retry stubs
* Small clean-up within packaging stubs
* Small clean-ups in markdown stubs
* A few more small tweaks to deprecated
* Small clean-up in deprecated stubs
* Fix a few issues with the docs to merge and named them with the proper suffix
* Added a few more typings, and crated a doc directory where we can keep the docstrings to be merged
* More cleanup and fixes
* Create README.md
* Small clean-up pass on cachetools
* Enabled black formatter
* Removed uneeded imports. Removed use of Any where redundant and not explicitly intended. Fixed some more minor issues
* fixed errors found with mypy tests removed sigs that were already typed in the base class
* Added utility scripts. Renamed DType to Dtype. Made the iLocIndexerrFrame synthetic class a subclass of the concrete non-specialized iLocIndexer, and similar for loc indexers and for both of these as specialized for Series
* Many fixes, added lots of missing Cython types, commented out unneeded imports (leaving them around for now though; we can strip all comments later)
* Did a clean-up pass on freezegun (small changes for consistency with other type stubs)
* Small clean-up pass on filelock stub
* Minor tweaks
* Add missing annotations
* Minor corrections
* Address more comments
* Address comments
* Formatting
* Add stubs for freezegun
* Formatting
* Fixes
* Stubs for filelock
* fixed a \_Timer reference
* Deleted multidict stubs. The latest version of multidict ships with inlined stubs
* Did clean-up pass on slugify stubs
* Did clean-up pass on packaging stubs
* Started to clean up mutlidict stubs. More work is needed
* Checked in .vscode/settings.json so everyone uses the same settings when working on stubs
* Did a clean-up pass on markdown stubs
* Did a clean-up pass on deprecated stubs
* Did a clean-up pass on cachetools stubs
* Did a clean-up pass on aiofiles stubs
* Added Tuples Made \_timer to a Callable fixed popitem
* Fixes
* Whoops
* Stubs for retry
* Fixes
* Fixes
* Removed the remaining Anys,; Removed danglings commas Removed generics \_\_iter\_\_() returns \_KT
* Add slugify stubs
* New pandas staubs based off stubgen skeletons, with the old ones I did before merged in
* Drop non-core API
* PR feedback
* added generics and removed almost all Anys
* Add stubs for Extensions public API
* Fix formatting
* Remove overload with kwargs
* Add stubs for core public API
* Add overloads + keyword args
* Add overloads
* Add callable
* Create pyproject.toml
* Stubs for deprecated
* stubs for cachetools
* Added initial stubs for aiofiles package
* Added some packages that had type hints in comments/docstrings
* Initial SECURITY.md commit
* Initial README.md commit
* Initial CODE\_OF\_CONDUCT.md commit
* Initial LICENSE commit
* Initial commit
