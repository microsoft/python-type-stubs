from typing import Any
from typing_extensions import Self

from sympy.core.logic import And
from sympy.sets.sets import Complement, FiniteSet, Intersection, Set, Union

adummy = ...

class ConditionSet(Set):
    def __new__(cls, sym, condition, base_set=...) -> Set | FiniteSet | Intersection | Union | Complement | Self: ...

    sym = ...
    condition = ...
    base_set = ...
    @property
    def free_symbols(self) -> Any: ...
    @property
    def bound_symbols(self) -> list[Any]: ...
    def as_relational(self, other) -> And: ...
