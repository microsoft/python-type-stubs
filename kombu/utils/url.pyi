"""
This type stub file was generated by pyright.
"""

from functools import partial
from typing import Any, Dict, Mapping, NamedTuple, Union
from ..log import get_logger
from urllib.parse import quote

"""URL Utilities."""
safequote = partial(quote, safe='')
logger = get_logger(__name__)
urlparts = NamedTuple('urlparts', [('scheme', str), ('hostname', str), ('port', int), ('username', str), ('password', str), ('path', str), ('query', Mapping)])
def parse_url(url: str) -> Dict:
    """Parse URL into mapping of components."""
    ...

def url_to_parts(url: str) -> urlparts:
    """Parse URL into :class:`urlparts` tuple of components."""
    ...

_parse_url = url_to_parts
def as_url(scheme: str, host: str = ..., port: int = ..., user: str = ..., password: str = ..., path: str = ..., query: str = ..., sanitize: bool = ..., mask: str = ...) -> str:
    """Generate URL from component parts."""
    ...

def sanitize_url(url: str, mask: str = ...) -> str:
    """Return copy of URL with password removed."""
    ...

def maybe_sanitize_url(url, mask: str = ...):
    """Sanitize url, or do nothing if url undefined."""
    ...

def parse_ssl_cert_reqs(query_value: str) -> Union[str, None]:
    """Given the query parameter for ssl_cert_reqs, return the SSL constant or None."""
    ...

