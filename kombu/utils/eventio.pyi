"""
This type stub file was generated by pyright.
"""

import select as __select__

"""Selector Utilities."""
_selectf = __select__.select
_selecterr = __select__.error
xpoll = getattr(__select__, 'poll', None)
epoll = getattr(__select__, 'epoll', None)
kqueue = getattr(__select__, 'kqueue', None)
kevent = getattr(__select__, 'kevent', None)
KQ_EV_ADD = getattr(__select__, 'KQ_EV_ADD', 1)
KQ_EV_DELETE = getattr(__select__, 'KQ_EV_DELETE', 2)
KQ_EV_ENABLE = getattr(__select__, 'KQ_EV_ENABLE', 4)
KQ_EV_CLEAR = getattr(__select__, 'KQ_EV_CLEAR', 32)
KQ_EV_ERROR = getattr(__select__, 'KQ_EV_ERROR', 16384)
KQ_EV_EOF = getattr(__select__, 'KQ_EV_EOF', 32768)
KQ_FILTER_READ = getattr(__select__, 'KQ_FILTER_READ', - 1)
KQ_FILTER_WRITE = getattr(__select__, 'KQ_FILTER_WRITE', - 2)
KQ_FILTER_AIO = getattr(__select__, 'KQ_FILTER_AIO', - 3)
KQ_FILTER_VNODE = getattr(__select__, 'KQ_FILTER_VNODE', - 4)
KQ_FILTER_PROC = getattr(__select__, 'KQ_FILTER_PROC', - 5)
KQ_FILTER_SIGNAL = getattr(__select__, 'KQ_FILTER_SIGNAL', - 6)
KQ_FILTER_TIMER = getattr(__select__, 'KQ_FILTER_TIMER', - 7)
KQ_NOTE_LOWAT = getattr(__select__, 'KQ_NOTE_LOWAT', 1)
KQ_NOTE_DELETE = getattr(__select__, 'KQ_NOTE_DELETE', 1)
KQ_NOTE_WRITE = getattr(__select__, 'KQ_NOTE_WRITE', 2)
KQ_NOTE_EXTEND = getattr(__select__, 'KQ_NOTE_EXTEND', 4)
KQ_NOTE_ATTRIB = getattr(__select__, 'KQ_NOTE_ATTRIB', 8)
KQ_NOTE_LINK = getattr(__select__, 'KQ_NOTE_LINK', 16)
KQ_NOTE_RENAME = getattr(__select__, 'KQ_NOTE_RENAME', 32)
KQ_NOTE_REVOKE = getattr(__select__, 'KQ_NOTE_REVOKE', 64)
POLLIN = getattr(__select__, 'POLLIN', 1)
POLLOUT = getattr(__select__, 'POLLOUT', 4)
POLLERR = getattr(__select__, 'POLLERR', 8)
POLLHUP = getattr(__select__, 'POLLHUP', 16)
POLLNVAL = getattr(__select__, 'POLLNVAL', 32)
READ = POLL_READ = 1
WRITE = POLL_WRITE = 4
ERR = POLL_ERR = 8 | 16
class _epoll:
    def __init__(self) -> None:
        ...
    
    def register(self, fd, events):
        ...
    
    def unregister(self, fd):
        ...
    
    def poll(self, timeout):
        ...
    
    def close(self):
        ...
    


class _kqueue:
    w_fflags = ...
    def __init__(self) -> None:
        ...
    
    def register(self, fd, events):
        ...
    
    def unregister(self, fd):
        ...
    
    def watch_file(self, fd):
        ...
    
    def unwatch_file(self, fd):
        ...
    
    def poll(self, timeout):
        ...
    
    def close(self):
        ...
    


class _poll:
    def __init__(self) -> None:
        ...
    
    def register(self, fd, events):
        ...
    
    def unregister(self, fd):
        ...
    
    def poll(self, timeout, round=..., POLLIN=..., POLLOUT=..., POLLERR=..., READ=..., WRITE=..., ERR=..., Integral=...):
        ...
    
    def close(self):
        ...
    


class _select:
    def __init__(self) -> None:
        ...
    
    def register(self, fd, events):
        ...
    
    def unregister(self, fd):
        ...
    
    def poll(self, timeout):
        ...
    
    def close(self):
        ...
    


def poll(*args, **kwargs):
    """Create new poller instance."""
    ...

