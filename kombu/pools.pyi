"""
This type stub file was generated by pyright.
"""

import os
from .resource import Resource
from .utils.collections import EqualityDict

"""Public resource pools."""
_limit = [10]
use_global_limit = object()
disable_limit_protection = os.environ.get('KOMBU_DISABLE_LIMIT_PROTECTION')
class ProducerPool(Resource):
    """Pool of :class:`kombu.Producer` instances."""
    Producer = ...
    close_after_fork = ...
    def __init__(self, connections, *args, **kwargs) -> None:
        ...
    
    def create_producer(self):
        ...
    
    def new(self):
        ...
    
    def setup(self):
        ...
    
    def close_resource(self, resource):
        ...
    
    def prepare(self, p):
        ...
    
    def release(self, resource):
        ...
    


class PoolGroup(EqualityDict):
    """Collection of resource pools."""
    def __init__(self, limit=..., close_after_fork=...) -> None:
        ...
    
    def create(self, resource, limit):
        ...
    
    def __missing__(self, resource):
        ...
    


def register_group(group):
    """Register group (can be used as decorator)."""
    ...

class Connections(PoolGroup):
    """Collection of connection pools."""
    def create(self, connection, limit):
        ...
    


connections = register_group(Connections(limit=use_global_limit))
class Producers(PoolGroup):
    """Collection of producer pools."""
    def create(self, connection, limit):
        ...
    


producers = register_group(Producers(limit=use_global_limit))
def get_limit():
    """Get current connection pool limit."""
    ...

def set_limit(limit, force=..., reset_after=..., ignore_errors=...):
    """Set new connection pool limit."""
    ...

def reset(*args, **kwargs):
    """Reset all pools by closing open resources."""
    ...

