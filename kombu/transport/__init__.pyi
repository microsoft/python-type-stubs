"""
This type stub file was generated by pyright.
"""

"""Built-in transports."""
def supports_librabbitmq():
    """Return true if :pypi:`librabbitmq` can be used."""
    ...

TRANSPORT_ALIASES = { 'amqp': 'kombu.transport.pyamqp:Transport','amqps': 'kombu.transport.pyamqp:SSLTransport','pyamqp': 'kombu.transport.pyamqp:Transport','librabbitmq': 'kombu.transport.librabbitmq:Transport','memory': 'kombu.transport.memory:Transport','redis': 'kombu.transport.redis:Transport','rediss': 'kombu.transport.redis:Transport','SQS': 'kombu.transport.SQS:Transport','sqs': 'kombu.transport.SQS:Transport','mongodb': 'kombu.transport.mongodb:Transport','zookeeper': 'kombu.transport.zookeeper:Transport','sqlalchemy': 'kombu.transport.sqlalchemy:Transport','sqla': 'kombu.transport.sqlalchemy:Transport','SLMQ': 'kombu.transport.SLMQ.Transport','slmq': 'kombu.transport.SLMQ.Transport','filesystem': 'kombu.transport.filesystem:Transport','qpid': 'kombu.transport.qpid:Transport','sentinel': 'kombu.transport.redis:SentinelTransport','consul': 'kombu.transport.consul:Transport','etcd': 'kombu.transport.etcd:Transport','azurestoragequeues': 'kombu.transport.azurestoragequeues:Transport','azureservicebus': 'kombu.transport.azureservicebus:Transport','pyro': 'kombu.transport.pyro:Transport' }
def resolve_transport(transport=...):
    """Get transport by name.

    Arguments:
        transport (Union[str, type]): This can be either
            an actual transport class, or the fully qualified
            path to a transport class, or the alias of a transport.
    """
    ...

def get_transport_cls(transport=...):
    """Get transport class by name.

    The transport string is the full path to a transport class, e.g.::

        "kombu.transport.pyamqp:Transport"

    If the name does not include `"."` (is not fully qualified),
    the alias table will be consulted.
    """
    ...

