"""
This type stub file was generated by pyright.
"""

"""Object utilities."""
def unpickle_dict(cls, kwargs):
    ...

class Object:
    """Common base class.

    Supports automatic kwargs->attributes handling, and cloning.
    """
    attrs = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    def as_dict(self, recurse=...):
        ...
    
    def __reduce__(self):
        ...
    
    def __copy__(self):
        ...
    


class MaybeChannelBound(Object):
    """Mixin for classes that can be bound to an AMQP channel."""
    _channel = ...
    _is_bound = ...
    can_cache_declaration = ...
    def __call__(self, channel):
        """`self(channel) -> self.bind(channel)`."""
        ...
    
    def bind(self, channel):
        """Create copy of the instance that is bound to a channel."""
        ...
    
    def maybe_bind(self, channel):
        """Bind instance to channel if not already bound."""
        ...
    
    def revive(self, channel):
        """Revive channel after the connection has been re-established.

        Used by :meth:`~kombu.Connection.ensure`.

        """
        ...
    
    def when_bound(self):
        """Callback called when the class is bound."""
        ...
    
    def __repr__(self):
        ...
    
    @property
    def is_bound(self):
        """Flag set if the channel is bound."""
        ...
    
    @property
    def channel(self):
        """Current channel if the object is bound."""
        ...
    


